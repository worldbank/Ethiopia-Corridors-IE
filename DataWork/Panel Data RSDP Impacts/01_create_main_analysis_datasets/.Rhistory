library(tidyr)
library(lfe)
library(reshape)
library(dplyr)
library(tibble)
library(ggplot2)
library(data.table)
library(coefplot)
library(stringr)
library(doBy)
library(stargazer)
library(scales)
library(rasterVis)
library(ggpubr)
library(readr)
library(gdistance)
source("https://raw.githubusercontent.com/ramarty/fast-functions/master/R/functions_in_chunks.R")
# Run Scripts ------------------------------------------------------------------
##### Extract Data to Grids
if(F){
grid_scripts <- c("02a_extract_gadm.R",
#"02b_extract_ndvi.R",
#"02b_extract_viirs.R",
"02c_extract_distance_improved_roads_by_speedlimit_after.R",
#"02c_extract_distance_improved_roads_by_speedlimit_before.R",
#"02c_extract_distance_roads_by_phase.R",
#"02c_extract_distance_roads_by_speedlimit.R",
"02d_distance_cities.R",
"02e_extract_globcover.R",
"02f_extract_dmspols_intercalibrated_zhang2016_method.R",
"04b_merge_datasets_dmspols.R",
"05_create_variables_for_analysis.R")
for(script_i in grid_scripts){
print(paste(script_i, "----------------------------------------------------"))
source(file.path(code_file_path, "create_clean_datasets", "02_create_gridded_datasets", script_i))
}
}
# Create Variables for Analysis
# Run woreda level first as merge in some of those variables to grid level.
# All distances measured in meters.
if(grepl("grid", DATASET_TYPE)){
NEAR_CUTOFF <- 5 * 1000
} else{
NEAR_CUTOFF <- 0
}
# Load Data --------------------------------------------------------------------
data <- readRDS(file.path(finaldata_file_path, DATASET_TYPE, "merged_datasets", "grid_data.Rds"))
if(DATASET_TYPE %in% "woreda_panel_hdx_csa") data$cell_id <- data$uid
# Distance to aggregate road categories ----------------------------------------
# We calculate distance to roads by speed limit. Here we calculate distance
# to any road, road 50 km/hr and above and roads less than 50 km/hr
# If all NA, then return NA; if one isn't NA, return a value
min_NAifAllNA <- function(x){
if(sum(!is.na(x)) > 0){
return(min(x, na.rm=T))
} else{
return(NA)
}
}
#data$distance_road <- apply(data[,paste0("distance_road_speed_",c(20,25,30,35,45,50,70,120))], 1, FUN = min_NAifAllNA)
#data$distance_road_50above <- apply(data[,paste0("distance_road_speed_",c(50,70,120))], 1, FUN = min_NAifAllNA)
#data$distance_road_below50 <- apply(data[,paste0("distance_road_speed_",c(20,25,30,35,45))], 1, FUN = min_NAifAllNA)
data$distance_improvedroad <- apply(data[,paste0("distance_improvedroad_speedafter_",c(20,25,30,35,45,50,70,120))], 1, FUN = min_NAifAllNA)
data$distance_improvedroad_50aboveafter <- apply(data[,paste0("distance_improvedroad_speedafter_",c(50,70,120))], 1, FUN = min_NAifAllNA)
data$distance_improvedroad_below50after <- apply(data[,paste0("distance_improvedroad_speedafter_",c(20,25,30,35,45))], 1, FUN = min_NAifAllNA)
#data$distance_improvedroad_50abovebefore <- apply(data[,paste0("distance_improvedroad_speedbefore_",c(50))], 1, FUN = min_NAifAllNA)
#data$distance_improvedroad_below50before <- apply(data[,paste0("distance_improvedroad_speedbefore_",c(20,25,30,35,45))], 1, FUN = min_NAifAllNA)
#if(DATASET_TYPE %in% "woreda_panel_hdx_csa") data$distance_improvedroad_50abovebefore <- data$distance_improvedroad_below50before
#data$distance_improvedroad_below45after <- apply(data[,paste0("distance_improvedroad_speedafter_",c(20,25,30,35))], 1, FUN = min_NAifAllNA)
#data$distance_improvedroad_below35after <- apply(data[,paste0("distance_improvedroad_speedafter_",c(20,25,30))], 1, FUN = min_NAifAllNA)
# Remove cells not in analysis -------------------------------------------------
#### Include unit if near an improved road at some point during the analysis
data$distance_improvedroad_TEMP <- data$distance_improvedroad
data$distance_improvedroad_TEMP[is.na(data$distance_improvedroad_TEMP)] <- 9999*1000
data <- data %>%
group_by(cell_id) %>%
mutate(distance_improvedroad_TEMP_min = min(distance_improvedroad_TEMP)) %>%
ungroup()
data <- data[data$distance_improvedroad_TEMP_min <= NEAR_CUTOFF,]
data$distance_improvedroad_TEMP <- NULL
data$distance_improvedroad_TEMP_min <- NULL
#### Remove Cells intersect road
head(data$distance_anyroad2016)
summary(data$distance_anyroad2016)
#### Remove Cells intersect road
data <- data[data$distance_anyroad2016 >= 1000,]
for(i in 1:5) gc()
# Near Roads -------------------------------------------------------------------
#for(var in c("distance_road",
#             "distance_road_50above",
#             "distance_road_below50")){
#  print(var)
#  data[[str_replace_all(var, "distance_", "near_")]] <- data[[var]] < NEAR_CUTOFF
#}
# Years Since / Post Improved Variables ----------------------------------------
generate_road_improved_variables <- function(road_var, data){
print(road_var)
road_type <- road_var %>% str_replace_all("distance_", "")
data$distance_roadTEMP <- data[[road_var]]
data <- data %>%
# Whether near improved road
mutate(near_roadTEMP = distance_roadTEMP <= NEAR_CUTOFF) %>%
# Year road improved (if any). Only consider earliest improved road. If cell near
# area where another road was improved, we don't consider this. So:
# 0 0 0 0 2007 0 0 2010 0 0 0 --> would yield 2007, while all zeros returns NA
mutate(near_roadTEMP_X_year = near_roadTEMP * year) %>%
mutate(near_roadTEMP_X_year = na_if(near_roadTEMP_X_year, 0)) %>%
mutate(near_roadTEMP_X_year = near_roadTEMP_X_year %>% as.numeric())
# Variable for each cell of first year became near an improved road
data_dt <- as.data.table(data)
data <- data_dt[, year_roadTEMP:=min(near_roadTEMP_X_year,na.rm=T), by=list(cell_id)] %>% as.data.frame()
data$year_roadTEMP[data$year_roadTEMP %in% Inf] <- NA
data$years_since_roadTEMP <- data$year - data$year_roadTEMP
data$post_roadTEMP <- data$years_since_roadTEMP >= 0
# Subset variables and rename
data <- data %>%
dplyr::select(year_roadTEMP, years_since_roadTEMP, post_roadTEMP)
# +/- 10 years aggregate
data$years_since_roadTEMP[data$years_since_roadTEMP >= 10] <- 10
data$years_since_roadTEMP[data$years_since_roadTEMP <= -10] <- -10
# Prep variables
data$years_since_roadTEMP <- data$years_since_roadTEMP %>% as.factor() %>% relevel("-1")
data$post_roadTEMP <- data$post_roadTEMP %>% as.numeric()
names(data) <- names(data) %>% str_replace_all("roadTEMP", road_type)
return(data)
}
#"distance_improvedroad_50abovebefore",
#"distance_improvedroad_below50before",
#"distance_improvedroad_speedbefore_50",
#"distance_improvedroad_below45after",
#"distance_improvedroad_below35after"
roadimproved_df <- lapply(c("distance_improvedroad",
"distance_improvedroad_50aboveafter",
"distance_improvedroad_below50after"),
generate_road_improved_variables, data) %>% bind_cols()
data <- bind_cols(data, roadimproved_df)
# Dependent Variable Transformations -------------------------------------------
# Inverse Hyperbolic Since Transformation
# This is used by Mitnik et. al. due to lots of zeros in DMSP-OLS
calc_ihs <- function(x) log(x + sqrt(x^2 + 1))
data <- data %>%
group_by(cell_id) %>%
# Baseline variables
mutate(dmspols_1996 = dmspols[year == 1996],
dmspols_zhang_1996 = dmspols_zhang[year == 1996]) %>%
ungroup() %>%
mutate(dmspols_ihs = calc_ihs(dmspols),
dmspols_zhang_ihs = calc_ihs(dmspols_zhang),
dmspols_1996_ihs = calc_ihs(dmspols_1996),
dmspols_zhang_1996_ihs = calc_ihs(dmspols_zhang_1996))
# Baseline NTL quantiles
dmspols_1996_median <- data$dmspols_1996[data$dmspols_1996 > 0] %>% median(na.rm=T)
data$dmspols_1996_group <- 1
data$dmspols_1996_group[data$dmspols_1996 > 0] <- 2
data$dmspols_1996_group[data$dmspols_1996 >= dmspols_1996_median] <- 3
dmspols_zhang_1996_median <- data$dmspols_zhang_1996[data$dmspols_zhang_1996 > 0] %>% median(na.rm=T)
data$dmspols_zhang_1996_group <- 1
data$dmspols_zhang_1996_group[data$dmspols_zhang_1996 > 0] <- 2
data$dmspols_zhang_1996_group[data$dmspols_zhang_1996 >= dmspols_zhang_1996_median] <- 3
data$dmspols_1996_group <- data$dmspols_1996_group %>% as.factor()
data$dmspols_zhang_1996_group <- data$dmspols_zhang_1996_group %>% as.factor()
# Geographic Regions -----------------------------------------------------------
data$region_type <- ifelse(data$GADM_ID_1 %in% c("Afar", "Benshangul-Gumaz", "Somali"), "Sparse", "Dense") %>% factor(levels=c("Sparse", "Dense"))
data$GADM_ID_1 <- NULL
if(DATASET_TYPE %in% "woreda_panel_hdx_csa"){
data$R_NAME <- data$R_NAME %>% as.character()
data$region_type <- ifelse(data$R_NAME %in% c("Afar", "Benishangul Gumuz", "SOMALI REGION"), "Sparse", "Dense") %>% factor(levels=c("Sparse", "Dense"))
}
# Create Other Variables -------------------------------------------------------
data$dmspols_zhang_2 <- data$dmspols_zhang >= 2
data$dmspols_zhang_6 <- data$dmspols_zhang >= 6
# Log market access ------------------------------------------------------------
if(DATASET_TYPE %in% "woreda_panel_hdx_csa"){
for(var in names(data)[grepl("^MA_", names(data))]){
data[[paste0(var,"_log")]] <- log(data[[var]])
}
}
# For grid dataset, merge and prep select woreda-level variables ---------------
if(grepl("grid", DATASET_TYPE)){
woreda_data <- readRDS(file.path(finaldata_file_path, "woreda_panel_hdx_csa", "merged_datasets", "grid_data_clean.Rds"))
woreda_data <- woreda_data %>%
dplyr::select(uid, year, dmspols_zhang_1996_group, dmspols_1996_group) %>%
dplyr::rename(woreda_hdx_w_uid = uid)
names(woreda_data)[!(names(woreda_data) %in% c("woreda_hdx_w_uid", "year"))] <-
paste0(names(woreda_data)[!(names(woreda_data) %in% c("woreda_hdx_w_uid", "year"))], "_woreda")
data <- merge(data, woreda_data, by=c("woreda_hdx_w_uid", "year"), all=T)
} else{
# Add same variable names to woreda to make analysis script work for both
data$dmspols_zhang_1996_group_woreda <- data$dmspols_zhang_1996_group
data$dmspols_1996_group_woreda       <- data$dmspols_1996_group
data$woreda_hdx_w_uid       <- data$uid
data$woreda_hdx_z_code       <- data$Z_CODE
}
# Remove Stuff Don't Need ------------------------------------------------------
#### Remove variabled don't need
if(DATASET_TYPE %in% "dmspols_grid_dataset_nearroad"){
data$distance_city_popsize_3groups_g1 <- NULL
data$distance_city_popsize_3groups_g2 <- NULL
data$distance_city_popsize_3groups_g3 <- NULL
data$distance_city_all <- NULL
data$distance_improvedroad_speedafter_20 <- NULL
data$distance_improvedroad_speedafter_25 <- NULL
data$distance_improvedroad_speedafter_30 <- NULL
data$distance_improvedroad_speedafter_35 <- NULL
data$distance_improvedroad_speedafter_45 <- NULL
data$distance_improvedroad_speedafter_50 <- NULL
data$distance_improvedroad_speedafter_70 <- NULL
data$distance_improvedroad_speedafter_120 <- NULL
data$globcover_cropland_rainfed <- NULL
data$globcover_cropland_irrigated <- NULL
data$globcover_cropland_mosaic <- NULL
#data$year_improvedroad <- NULL
}
# Export -----------------------------------------------------------------------
saveRDS(data, file.path(finaldata_file_path, DATASET_TYPE, "merged_datasets", "grid_data_clean.Rds"))
data$distance_anyroad2016 <- NULL
# Export -----------------------------------------------------------------------
saveRDS(data, file.path(finaldata_file_path, DATASET_TYPE, "merged_datasets", "grid_data_clean.Rds"))
dv <- "ndvi_cro"
grepl("ndvi", dv)
data <- data %>%
dplyr::rename("TempAvg" = "temp_avg",
"TempMin" = "temp_min",
"TempMax" = "temp_max")
help(stargazer)
# Exploratory Analysis
# APPROACH: Somewhat follow the Haiti paper. There it seems road improvement
# kinda random throughout their years. Here that's not the case, but maybe
# can assume that within an RDSP phase?
# OUTLINE
# 1. Overall impact of each phase.
# 2. Heterogeneity of impact, within each phase
#    2.1. Road type
#    2.2. Baseline Dep Var (for ntl, num or divide into thirds a la aiddata?)
#    2.3. Distance to City (could break down by city pop)
# DEPENDENT VARIABLES
# 1. dmspols_zhang_ihs
# 2. globcover_urban
# 3. Cropland? NDVI?
# PRESENT RESULTS
# 1. Post-treatment
# 2. Coef-plots. In same plot. All cells and (for hetro), below/above cutoffs (median / quartiles). Super important to see pre-trends.
# Load Data --------------------------------------------------------------------
data <- readRDS(file.path(finaldata_file_path, DATASET_TYPE, "merged_datasets", "grid_data_clean.Rds"))
data$far_addis <- as.numeric(data$distance_city_addisababa >= 100*1000)
data$post_improvedroad_50aboveafter[is.na(data$post_improvedroad_50aboveafter) & !is.na(data$post_improvedroad)] <- 0
data$post_improvedroad_below50after[is.na(data$post_improvedroad_below50after) & !is.na(data$post_improvedroad)] <- 0
data <- data %>%
dplyr::rename("TempAvg" = "temp_avg",
"TempMin" = "temp_min",
"TempMax" = "temp_max")
dv <- "ndvi"
addis_distance <- "All"
unit <- "cell"
cluster_var <- "woreda_hdx_z_code"
lm <- felm(dv ~ post_improvedroad + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
print(paste(dv, addis_distance,cluster_var, "-----------------"))
#### If DATASET_TYPE is woreda, skip select units
if(DATASET_TYPE %in% "woreda_panel_hdx_csa"){
#if(cluster_var %in% "woreda_hdx_w_uid") cluster_var <- "uid"
#if(cluster_var %in% "woreda_hdx_z_code") cluster_var <- "Z_CODE"
unit <- "woreda"
} else{
unit <- "cell"
}
#### Define Dependent Variable and Cluster Variable
data$dv <- data[[dv]]
data$cluster_var <- data[[cluster_var]]
#### Subset by Addis Distance
if(addis_distance %in% "Far"){
data_temp <- data[data$far_addis %in% 1,]
#data_w_temp <- data_w[data_w$far_addis %in% 1,]
} else{
data_temp <- data
#data_w_temp <- data_w
}
lm <- felm(dv ~ post_improvedroad + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
stargazer(lm)
lm <- felm(dv ~ post_improvedroad + TempAvg + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
stargazer(lm)
stargazer(lm, drop=c(precipitation))
stargazer(lm, drop=c("precipitation"))
stargazer(lm, keep = c("post_improvedroad"))
lm <- felm(dv ~ post_improvedroad + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_baselineNTL <- felm(dv ~ post_improvedroad + post_improvedroad*dmspols_zhang_1996_group_woreda - dmspols_zhang_1996_group_woreda + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_region <- felm(dv ~ post_improvedroad + post_improvedroad*region_type - region_type + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50 <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_baselineNTL <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*dmspols_zhang_1996_group_woreda +
post_improvedroad_50aboveafter*dmspols_zhang_1996_group_woreda -
dmspols_zhang_1996_group_woreda +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_region <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*region_type +
post_improvedroad_50aboveafter*region_type -
region_type +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
stargazer(lm,
lm_baselineNTL,
lm_region,
lm_50,
lm_50_baselineNTL,
lm_50_region)
lm <- felm(dv ~ post_improvedroad + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_baselineNTL <- felm(dv ~ post_improvedroad + post_improvedroad*dmspols_zhang_1996_group_woreda - dmspols_zhang_1996_group_woreda + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_region <- felm(dv ~ post_improvedroad + post_improvedroad*region_type - region_type + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50 <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_baselineNTL <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*dmspols_zhang_1996_group_woreda +
post_improvedroad_50aboveafter*dmspols_zhang_1996_group_woreda -
dmspols_zhang_1996_group_woreda +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_region <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*region_type +
post_improvedroad_50aboveafter*region_type -
region_type +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
stargazer(lm,
lm_baselineNTL,
lm_region,
lm_50,
lm_50_baselineNTL,
lm_50_region)
lm <- felm(dv ~ post_improvedroad | cell_id + year | 0 | cluster_var, data=data_temp)
lm_baselineNTL <- felm(dv ~ post_improvedroad + post_improvedroad*dmspols_zhang_1996_group_woreda - dmspols_zhang_1996_group_woreda | cell_id + year | 0 | cluster_var, data=data_temp)
lm_region <- felm(dv ~ post_improvedroad + post_improvedroad*region_type - region_type | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50 <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_baselineNTL <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*dmspols_zhang_1996_group_woreda +
post_improvedroad_50aboveafter*dmspols_zhang_1996_group_woreda -
dmspols_zhang_1996_group_woreda | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_region <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*region_type +
post_improvedroad_50aboveafter*region_type -
region_type | cell_id + year | 0 | cluster_var, data=data_temp)
stargazer(lm,
lm_baselineNTL,
lm_region,
lm_50,
lm_50_baselineNTL,
lm_50_region)
lm <- felm(dv ~ post_improvedroad + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_baselineNTL <- felm(dv ~ post_improvedroad + post_improvedroad*dmspols_zhang_1996_group_woreda - dmspols_zhang_1996_group_woreda + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_region <- felm(dv ~ post_improvedroad + post_improvedroad*region_type - region_type + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50 <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_baselineNTL <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*dmspols_zhang_1996_group_woreda +
post_improvedroad_50aboveafter*dmspols_zhang_1996_group_woreda -
dmspols_zhang_1996_group_woreda +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_region <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*region_type +
post_improvedroad_50aboveafter*region_type -
region_type +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
lm
stargazer(lm,
lm_baselineNTL,
lm_region,
lm_50,
lm_50_baselineNTL,
lm_50_region)
grepl("ndvi", "ndvi123")
# Exploratory Analysis
# APPROACH: Somewhat follow the Haiti paper. There it seems road improvement
# kinda random throughout their years. Here that's not the case, but maybe
# can assume that within an RDSP phase?
# OUTLINE
# 1. Overall impact of each phase.
# 2. Heterogeneity of impact, within each phase
#    2.1. Road type
#    2.2. Baseline Dep Var (for ntl, num or divide into thirds a la aiddata?)
#    2.3. Distance to City (could break down by city pop)
# DEPENDENT VARIABLES
# 1. dmspols_zhang_ihs
# 2. globcover_urban
# 3. Cropland? NDVI?
# PRESENT RESULTS
# 1. Post-treatment
# 2. Coef-plots. In same plot. All cells and (for hetro), below/above cutoffs (median / quartiles). Super important to see pre-trends.
# Load Data --------------------------------------------------------------------
data <- readRDS(file.path(finaldata_file_path, DATASET_TYPE, "merged_datasets", "grid_data_clean.Rds"))
data$far_addis <- as.numeric(data$distance_city_addisababa >= 100*1000)
data$post_improvedroad_50aboveafter[is.na(data$post_improvedroad_50aboveafter) & !is.na(data$post_improvedroad)] <- 0
data$post_improvedroad_below50after[is.na(data$post_improvedroad_below50after) & !is.na(data$post_improvedroad)] <- 0
data <- data %>%
dplyr::rename("TempAvg" = "temp_avg",
"TempMin" = "temp_min",
"TempMax" = "temp_max")
# Export Results ---------------------------------------------------------------
if(F){
dv <- "ndvi"
addis_distance <- "All"
unit <- "cell"
cluster_var <- "woreda_hdx_z_code"
}
# All Phases Together ----------------------------------------------------------
for(dv in c("ndvi_cropland", "ndvi", "dmspols_zhang_ihs", "dmspols_zhang_6", "globcover_urban", "globcover_cropland")){
for(addis_distance in c("All", "Far")){
for(cluster_var in c("woreda_hdx_w_uid", "woreda_hdx_z_code")){
Sys.sleep(.1)
for(i in 1:5) gc()
Sys.sleep(.1)
print(paste(dv, addis_distance,cluster_var, "-----------------"))
#### If DATASET_TYPE is woreda, skip select units
if(DATASET_TYPE %in% "woreda_panel_hdx_csa"){
#if(cluster_var %in% "woreda_hdx_w_uid") cluster_var <- "uid"
#if(cluster_var %in% "woreda_hdx_z_code") cluster_var <- "Z_CODE"
unit <- "woreda"
} else{
unit <- "cell"
}
#### Define Dependent Variable and Cluster Variable
data$dv <- data[[dv]]
data$cluster_var <- data[[cluster_var]]
#### Subset by Addis Distance
if(addis_distance %in% "Far"){
data_temp <- data[data$far_addis %in% 1,]
#data_w_temp <- data_w[data_w$far_addis %in% 1,]
} else{
data_temp <- data
#data_w_temp <- data_w
}
#### Create Dependent Variable Label
if(dv %in% "dmspols_zhang_ihs") dep_var_label <- "DMSP-OLS: IHS"
if(dv %in% "dmspols_zhang_6") dep_var_label <- "DMSP-OLS: Above Median"
if(dv %in% "globcover_urban") dep_var_label <- "Globcover: Urban"
if(dv %in% "globcover_cropland") dep_var_label <- "Globcover: Cropland"
if(dv %in% "ndvi") dep_var_label <- "NDVI"
if(dv %in% "ndvi_cropland") dep_var_label <- "NDVI in Cropland Areas"
#### Models
if(grepl("ndvi", dv)){
lm <- felm(dv ~ post_improvedroad + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_baselineNTL <- felm(dv ~ post_improvedroad + post_improvedroad*dmspols_zhang_1996_group_woreda - dmspols_zhang_1996_group_woreda + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_region <- felm(dv ~ post_improvedroad + post_improvedroad*region_type - region_type + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50 <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter + TempAvg + TempMin + TempMax + precipitation | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_baselineNTL <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*dmspols_zhang_1996_group_woreda +
post_improvedroad_50aboveafter*dmspols_zhang_1996_group_woreda -
dmspols_zhang_1996_group_woreda +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_region <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*region_type +
post_improvedroad_50aboveafter*region_type -
region_type +
TempAvg + TempMin + TempMax + precipitation| cell_id + year | 0 | cluster_var, data=data_temp)
cov_labels <- c("Near Improved Rd.",
"Near Improved Rd. $<$50km/hr",
"Near Improved Rd. $>=$50km/hr",
"Temp: Avg",
"Temp: Min",
"Temp: Max",
"Precipitation",
"Near Improved Rd. X DMSP Low",
"Near Improved Rd. X DMSP High",
"Near Improved Rd. X Dense Region",
"Near Improved Rd. $<$50km/hr X DMSP Low",
"Near Improved Rd. $<$50km/hr X DMSP High",
"Near Improved Rd. $>=$50km/hr X DMSP Low",
"Near Improved Rd. $>=$50km/hr X DMSP High",
"Near Improved Rd. $>=$50km/hr X Dense Region",
"Near Improved Rd. $<$50km/hr X Dense Region")
} else{
lm <- felm(dv ~ post_improvedroad | cell_id + year | 0 | cluster_var, data=data_temp)
lm_baselineNTL <- felm(dv ~ post_improvedroad + post_improvedroad*dmspols_zhang_1996_group_woreda - dmspols_zhang_1996_group_woreda | cell_id + year | 0 | cluster_var, data=data_temp)
lm_region <- felm(dv ~ post_improvedroad + post_improvedroad*region_type - region_type | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50 <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_baselineNTL <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*dmspols_zhang_1996_group_woreda +
post_improvedroad_50aboveafter*dmspols_zhang_1996_group_woreda -
dmspols_zhang_1996_group_woreda | cell_id + year | 0 | cluster_var, data=data_temp)
lm_50_region <- felm(dv ~ post_improvedroad_below50after + post_improvedroad_50aboveafter +
post_improvedroad_below50after*region_type +
post_improvedroad_50aboveafter*region_type -
region_type | cell_id + year | 0 | cluster_var, data=data_temp)
cov_labels <- c("Near Improved Rd.",
"Near Improved Rd. X DMSP Low",
"Near Improved Rd. X DMSP High",
"Near Improved Rd. X Dense Region",
"Near Improved Rd. $<$50km/hr",
"Near Improved Rd. $>=$50km/hr",
"Near Improved Rd. $<$50km/hr X DMSP Low",
"Near Improved Rd. $<$50km/hr X DMSP High",
"Near Improved Rd. $>=$50km/hr X DMSP Low",
"Near Improved Rd. $>=$50km/hr X DMSP High",
"Near Improved Rd. $>=$50km/hr X Dense Region",
"Near Improved Rd. $<$50km/hr X Dense Region")
}
stargazer(lm,
lm_baselineNTL,
lm_region,
lm_50,
lm_50_baselineNTL,
lm_50_region,
dep.var.labels.include = T,
dep.var.labels = c(dep_var_label),
dep.var.caption = "",
covariate.labels = cov_labels,
omit.stat = c("f","ser"),
align=TRUE,
no.space=TRUE,
float=FALSE,
column.sep.width="-15pt",
digits=2,
add.lines = list(
c("Cell FE", rep("Y", 6)),
c("Year FE", rep("Y", 6))),
out = file.path(tables_file_path, paste0("results_did_grouped_",dv,"_addisdistance",addis_distance,"_clustervar",cluster_var,"_unit",unit,".tex")))
}
}
}
# By Phase ---------------------------------------------------------------------
